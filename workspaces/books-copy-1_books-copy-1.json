{
  "version": 7,
  "createdAt": 1738706654743,
  "updatedAt": 1738713933416,
  "name": "books copy 1",
  "id": "books-copy-1",
  "states": {
    "panes": {
      "_id": "panes",
      "locked": false,
      "layout": [
        {
          "i": "chart",
          "type": "chart",
          "x": 0,
          "y": 12,
          "w": 12,
          "h": 12,
          "moved": false
        },
        {
          "i": "chart copy 1",
          "type": "chart",
          "x": 0,
          "y": 0,
          "w": 12,
          "h": 12,
          "moved": false
        },
        {
          "i": "chart copy 2",
          "type": "chart",
          "x": 12,
          "y": 0,
          "w": 12,
          "h": 12,
          "moved": false
        },
        {
          "i": "chart copy 3",
          "type": "chart",
          "x": 12,
          "y": 12,
          "w": 12,
          "h": 12,
          "moved": false
        }
      ],
      "panes": {
        "chart": {
          "id": "chart",
          "name": "",
          "type": "chart",
          "markets": [
            "BINANCE_FUTURES:btcusdt",
            "ORDERBOOK:AGGRPERP-BTCUSD"
          ],
          "zoom": 1
        },
        "chart copy 1": {
          "id": "chart copy 1",
          "name": "",
          "type": "chart",
          "zoom": 1,
          "settings": {
            "indicatorsErrors": {},
            "indicators": {
              "price-perp": {
                "enabled": true,
                "name": "Price Perp",
                "script": "src = { sources: { \"BINANCE_FUTURES:btcusdt\":BINANCE_FUTURES:btcusdt }, localTimestamp: time }\r\n\r\nvar ohlc = options.useHeikinAshi ? avg_heikinashi(src) : options.useGaps ? avg_ohlc_with_gaps(src) : avg_ohlc(src)\r\n\r\nplotcandlestick(ohlc, id=price)",
                "options": {
                  "priceScaleId": "right",
                  "priceFormat": {
                    "auto": true,
                    "precision": 1,
                    "minMove": 0.1
                  },
                  "priceLineVisible": true,
                  "lastValueVisible": true,
                  "borderVisible": false,
                  "upColor": "rgba(255,235,59,0.52)",
                  "downColor": "rgba(242,54,69,0.64)",
                  "borderUpColor": "rgba(255,245,157,0.66)",
                  "borderDownColor": "rgba(178,40,51,0.52)",
                  "wickUpColor": "rgb(223,211,144)",
                  "wickDownColor": "rgba(239,67,82,0.47)",
                  "useGaps": false,
                  "useHeikinAshi": false,
                  "scaleMargins": {
                    "top": 0.02,
                    "bottom": 0.78
                  },
                  "visible": true
                },
                "id": "price-perp",
                "createdAt": 1700269685372,
                "updatedAt": 1703140221229,
                "series": [
                  "price copy 2"
                ],
                "unsavedChanges": false,
                "preview": {},
                "optionsDefinitions": {},
                "displayName": "Price Perp"
              },
              "bids-asks-p": {
                "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\nplotcloudarea(_bids, _asks, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
                "id": "bids-asks-p",
                "name": "Bids Asks P",
                "options": {
                  "priceScaleId": "bids-asks",
                  "scaleMargins": {
                    "top": 0.26,
                    "bottom": 0.57
                  },
                  "togglePerp": true,
                  "toggleSpot": false,
                  "toggleBinance": false,
                  "toggleC": null,
                  "toggleRatio0": null,
                  "toggleRatio1": null,
                  "toggleRatio2": null,
                  "toggleRatio3": null,
                  "toggleCoinbase": false,
                  "toggleBitmex": false,
                  "toggleBand1": true,
                  "toggleBand2": false,
                  "toggleBand3": false,
                  "toggleBand4": false,
                  "lastValueVisible": true,
                  "priceFormat": {
                    "type": "volume",
                    "precision": 2,
                    "minMove": 0.01,
                    "auto": true
                  },
                  "visible": true
                },
                "description": null,
                "createdAt": 1703182792738,
                "updatedAt": 1703182792738,
                "unsavedChanges": false,
                "optionsDefinitions": {},
                "displayName": "Bids Asks P",
                "series": [
                  "bids-asks-p"
                ]
              },
              "bids-asks-p1": {
                "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\nplotcloudarea(_bids, _asks, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
                "id": "bids-asks-p1",
                "name": "Bids Asks P1",
                "options": {
                  "priceScaleId": "bids-asks-p1",
                  "scaleMargins": {
                    "top": 0.44,
                    "bottom": 0.39
                  },
                  "togglePerp": true,
                  "toggleSpot": false,
                  "toggleBinance": false,
                  "toggleC": null,
                  "toggleRatio0": null,
                  "toggleRatio1": null,
                  "toggleRatio2": null,
                  "toggleRatio3": null,
                  "toggleCoinbase": false,
                  "toggleBitmex": false,
                  "toggleBand1": false,
                  "toggleBand2": true,
                  "toggleBand3": false,
                  "toggleBand4": false,
                  "lastValueVisible": true,
                  "priceFormat": {
                    "type": "volume",
                    "precision": 2,
                    "minMove": 0.01,
                    "auto": true
                  },
                  "visible": true
                },
                "description": null,
                "unsavedChanges": true,
                "optionsDefinitions": {},
                "displayName": "Bids Asks P1",
                "series": [
                  "bids-asks-p1"
                ]
              },
              "bids-asks-p2": {
                "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\nplotcloudarea(_bids, _asks, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
                "id": "bids-asks-p2",
                "name": "Bids Asks P2",
                "options": {
                  "priceScaleId": "bids-asks-p2",
                  "scaleMargins": {
                    "top": 0.62,
                    "bottom": 0.21
                  },
                  "togglePerp": true,
                  "toggleSpot": false,
                  "toggleBinance": false,
                  "toggleC": null,
                  "toggleRatio0": null,
                  "toggleRatio1": null,
                  "toggleRatio2": null,
                  "toggleRatio3": null,
                  "toggleCoinbase": false,
                  "toggleBitmex": false,
                  "toggleBand1": false,
                  "toggleBand2": false,
                  "toggleBand3": true,
                  "toggleBand4": false,
                  "lastValueVisible": true,
                  "priceFormat": {
                    "type": "volume",
                    "precision": 2,
                    "minMove": 0.01,
                    "auto": true
                  },
                  "visible": true
                },
                "description": null,
                "unsavedChanges": false,
                "optionsDefinitions": {},
                "displayName": "Bids Asks P2",
                "series": [
                  "bids-asks-p2"
                ]
              },
              "bids-asks-p3": {
                "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\nplotcloudarea(_bids, _asks, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
                "id": "bids-asks-p3",
                "name": "Bids Asks P3",
                "options": {
                  "priceScaleId": "bids-asks-p3",
                  "scaleMargins": {
                    "top": 0.8,
                    "bottom": 0.05
                  },
                  "togglePerp": true,
                  "toggleSpot": false,
                  "toggleBinance": false,
                  "toggleC": null,
                  "toggleRatio0": null,
                  "toggleRatio1": null,
                  "toggleRatio2": null,
                  "toggleRatio3": null,
                  "toggleCoinbase": false,
                  "toggleBitmex": false,
                  "toggleBand1": false,
                  "toggleBand2": false,
                  "toggleBand3": false,
                  "toggleBand4": true,
                  "lastValueVisible": true,
                  "priceFormat": {
                    "type": "volume",
                    "precision": 2,
                    "minMove": 0.01,
                    "auto": true
                  },
                  "visible": true
                },
                "description": null,
                "unsavedChanges": false,
                "optionsDefinitions": {},
                "displayName": "Bids Asks P3",
                "series": [
                  "bids-asks-p3"
                ]
              },
              "ob-speed": {
                "script": "obUpdates = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zupdates + ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zupdates\r\n\r\nplothistogram(obUpdates)\r\nline(ema(obUpdates, 21))",
                "name": "OB speed",
                "priceScaleId": "ob-speed",
                "id": "ob-speed",
                "options": {
                  "priceScaleId": "ob-speed",
                  "scaleMargins": {
                    "top": 0.94,
                    "bottom": 0
                  },
                  "visible": true,
                  "togglePerp": true,
                  "toggleSpot": true,
                  "priceFormat": {
                    "type": "volume",
                    "precision": 2,
                    "minMove": 0.01,
                    "auto": true
                  }
                },
                "series": [
                  "ob-speed",
                  "jjia7sm8"
                ],
                "displayName": "OB speed",
                "unsavedChanges": false,
                "preview": {},
                "createdAt": 1701126916031,
                "updatedAt": 1702416144379,
                "optionsDefinitions": {}
              }
            },
            "indicatorOrder": [
              "price-perp",
              "bids-asks-p",
              "bids-asks-p1",
              "bids-asks-p2",
              "bids-asks-p3",
              "ob-speed"
            ],
            "priceScales": {
              "right": {
                "scaleMargins": {
                  "top": 0.02,
                  "bottom": 0.78
                },
                "priceFormat": {
                  "precision": 1,
                  "minMove": 0.1
                },
                "indicators": [
                  "Price Perp"
                ]
              },
              "cvd": {
                "scaleMargins": {
                  "top": 0.01,
                  "bottom": 0
                }
              },
              "volume_liquidations": {
                "scaleMargins": {
                  "top": 0,
                  "bottom": 0.96
                }
              },
              "volume": {
                "scaleMargins": {
                  "top": 0.87,
                  "bottom": 0
                }
              },
              "bids-asks": {
                "scaleMargins": {
                  "top": 0.26,
                  "bottom": 0.57
                },
                "indicators": [
                  "Bids Asks P"
                ]
              },
              "bids-asks-p1": {
                "scaleMargins": {
                  "top": 0.44,
                  "bottom": 0.39
                },
                "indicators": [
                  "Bids Asks P1"
                ]
              },
              "bids-asks-p2": {
                "scaleMargins": {
                  "top": 0.62,
                  "bottom": 0.21
                },
                "indicators": [
                  "Bids Asks P2"
                ]
              },
              "bids-asks-p3": {
                "scaleMargins": {
                  "top": 0.8,
                  "bottom": 0.05
                },
                "indicators": [
                  "Bids Asks P3"
                ]
              },
              "ob-speed": {
                "scaleMargins": {
                  "top": 0.94,
                  "bottom": 0
                },
                "indicators": [
                  "OB speed"
                ]
              }
            },
            "layouting": false,
            "showIndicators": true,
            "timeframe": "60",
            "refreshRate": 1000,
            "showAlerts": true,
            "showAlertsLabel": true,
            "showLegend": true,
            "fillGapsWithEmpty": true,
            "showHorizontalGridlines": false,
            "horizontalGridlinesColor": "rgba(255,255,255,.1)",
            "showVerticalGridlines": false,
            "verticalGridlinesColor": "rgba(255,255,255,.1)",
            "showWatermark": true,
            "watermarkColor": "rgba(255,255,255,.1)",
            "showBorder": true,
            "borderColor": null,
            "showLeftScale": false,
            "showRightScale": true,
            "showTimeScale": true,
            "hiddenMarkets": {},
            "barSpacing": 1.0631091229395144
          },
          "markets": [
            "COINBASE:BTC-USD",
            "ORDERBOOK:AGGRSPOT-BTCUSD"
          ]
        },
        "chart copy 2": {
          "id": "chart copy 2",
          "name": "",
          "type": "chart",
          "zoom": 1,
          "settings": {
            "indicatorsErrors": {},
            "indicators": {
              "ob-speed": {
                "script": "obUpdates = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zupdates + ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zupdates\r\n\r\nplothistogram(obUpdates)\r\nline(ema(obUpdates, 21))",
                "name": "OB speed",
                "priceScaleId": "ob-speed",
                "id": "ob-speed",
                "options": {
                  "priceScaleId": "ob-speed",
                  "scaleMargins": {
                    "top": 0.94,
                    "bottom": 0
                  },
                  "visible": true,
                  "togglePerp": true,
                  "toggleSpot": true,
                  "priceFormat": {
                    "type": "volume",
                    "precision": 2,
                    "minMove": 0.01,
                    "auto": true
                  }
                },
                "series": [
                  "ob-speed",
                  "525fejg7"
                ],
                "displayName": "OB speed",
                "unsavedChanges": false,
                "preview": {},
                "createdAt": 1701126916031,
                "updatedAt": 1702416144379,
                "optionsDefinitions": {}
              },
              "bids-asks-s": {
                "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\nplotcloudarea(_bids, _asks, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
                "id": "bids-asks-s",
                "name": "Bids Asks S",
                "options": {
                  "priceScaleId": "bids-asks",
                  "scaleMargins": {
                    "top": 0.26,
                    "bottom": 0.57
                  },
                  "togglePerp": false,
                  "toggleSpot": true,
                  "toggleBinance": false,
                  "toggleC": null,
                  "toggleRatio0": null,
                  "toggleRatio1": null,
                  "toggleRatio2": null,
                  "toggleRatio3": null,
                  "toggleCoinbase": false,
                  "toggleBitmex": false,
                  "toggleBand1": true,
                  "toggleBand2": false,
                  "toggleBand3": false,
                  "toggleBand4": false,
                  "lastValueVisible": true,
                  "priceFormat": {
                    "type": "volume",
                    "precision": 2,
                    "minMove": 0.01,
                    "auto": true
                  },
                  "visible": true
                },
                "description": null,
                "createdAt": 1703182792738,
                "updatedAt": 1703182792738,
                "unsavedChanges": false,
                "optionsDefinitions": {},
                "displayName": "Bids Asks S",
                "series": [
                  "bids-asks-s"
                ]
              },
              "bids-asks-s1": {
                "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\nplotcloudarea(_bids, _asks, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
                "id": "bids-asks-s1",
                "name": "Bids Asks S1",
                "options": {
                  "priceScaleId": "bids-asks-p1",
                  "scaleMargins": {
                    "top": 0.44,
                    "bottom": 0.39
                  },
                  "togglePerp": false,
                  "toggleSpot": true,
                  "toggleBinance": false,
                  "toggleC": null,
                  "toggleRatio0": null,
                  "toggleRatio1": null,
                  "toggleRatio2": null,
                  "toggleRatio3": null,
                  "toggleCoinbase": false,
                  "toggleBitmex": false,
                  "toggleBand1": false,
                  "toggleBand2": true,
                  "toggleBand3": false,
                  "toggleBand4": false,
                  "lastValueVisible": true,
                  "priceFormat": {
                    "type": "volume",
                    "precision": 2,
                    "minMove": 0.01,
                    "auto": true
                  },
                  "visible": true
                },
                "description": null,
                "unsavedChanges": false,
                "optionsDefinitions": {},
                "displayName": "Bids Asks S1",
                "series": [
                  "bids-asks-s1"
                ]
              },
              "bids-asks-s2": {
                "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\nplotcloudarea(_bids, _asks, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
                "id": "bids-asks-s2",
                "name": "Bids Asks S2",
                "options": {
                  "priceScaleId": "bids-asks-p2",
                  "scaleMargins": {
                    "top": 0.62,
                    "bottom": 0.21
                  },
                  "togglePerp": false,
                  "toggleSpot": true,
                  "toggleBinance": false,
                  "toggleC": null,
                  "toggleRatio0": null,
                  "toggleRatio1": null,
                  "toggleRatio2": null,
                  "toggleRatio3": null,
                  "toggleCoinbase": false,
                  "toggleBitmex": false,
                  "toggleBand1": false,
                  "toggleBand2": false,
                  "toggleBand3": true,
                  "toggleBand4": false,
                  "lastValueVisible": true,
                  "priceFormat": {
                    "type": "volume",
                    "precision": 2,
                    "minMove": 0.01,
                    "auto": true
                  },
                  "visible": true
                },
                "description": null,
                "unsavedChanges": false,
                "optionsDefinitions": {},
                "displayName": "Bids Asks S2",
                "series": [
                  "bids-asks-s2"
                ]
              },
              "bids-asks-s3": {
                "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\nplotcloudarea(_bids, _asks, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
                "id": "bids-asks-s3",
                "name": "Bids Asks S3",
                "options": {
                  "priceScaleId": "bids-asks-p3",
                  "scaleMargins": {
                    "top": 0.8,
                    "bottom": 0.05
                  },
                  "togglePerp": false,
                  "toggleSpot": true,
                  "toggleBinance": false,
                  "toggleC": null,
                  "toggleRatio0": null,
                  "toggleRatio1": null,
                  "toggleRatio2": null,
                  "toggleRatio3": null,
                  "toggleCoinbase": false,
                  "toggleBitmex": false,
                  "toggleBand1": false,
                  "toggleBand2": false,
                  "toggleBand3": false,
                  "toggleBand4": true,
                  "lastValueVisible": true,
                  "priceFormat": {
                    "type": "volume",
                    "precision": 2,
                    "minMove": 0.01,
                    "auto": true
                  },
                  "visible": true
                },
                "description": null,
                "unsavedChanges": false,
                "optionsDefinitions": {},
                "displayName": "Bids Asks S3",
                "series": [
                  "bids-asks-s3"
                ]
              },
              "price-coinbase": {
                "script": "src = { sources: { \"COINBASE:BTC-USD\":COINBASE:BTC-USD }, localTimestamp: time }\r\n\r\nvar ohlc = options.useHeikinAshi ? avg_heikinashi(src) : options.useGaps ? avg_ohlc_with_gaps(src) : avg_ohlc(src)\r\n\r\nplotcandlestick(ohlc, id=price)",
                "name": "Price Coinbase",
                "priceScaleId": "right",
                "id": "price-coinbase",
                "options": {
                  "priceScaleId": "right",
                  "useGaps": null,
                  "useHeikinAshi": null,
                  "visible": true
                },
                "series": [
                  "price copy 1"
                ],
                "displayName": "Price Coinbase",
                "unsavedChanges": false,
                "preview": {},
                "createdAt": 1701644059121,
                "updatedAt": 1701644307369,
                "optionsDefinitions": {}
              }
            },
            "indicatorOrder": [
              "ob-speed",
              "bids-asks-s",
              "bids-asks-s1",
              "bids-asks-s2",
              "bids-asks-s3",
              "price-coinbase"
            ],
            "priceScales": {
              "right": {
                "scaleMargins": {
                  "top": 0.02,
                  "bottom": 0.78
                },
                "priceFormat": {
                  "precision": 2,
                  "minMove": 0.01
                },
                "indicators": [
                  "Price Perp"
                ]
              },
              "cvd": {
                "scaleMargins": {
                  "top": 0.01,
                  "bottom": 0
                }
              },
              "volume_liquidations": {
                "scaleMargins": {
                  "top": 0,
                  "bottom": 0.96
                }
              },
              "volume": {
                "scaleMargins": {
                  "top": 0.87,
                  "bottom": 0
                }
              },
              "bids-asks": {
                "scaleMargins": {
                  "top": 0.26,
                  "bottom": 0.57
                },
                "indicators": [
                  "Bids Asks P"
                ]
              },
              "bids-asks-p1": {
                "scaleMargins": {
                  "top": 0.44,
                  "bottom": 0.39
                },
                "indicators": [
                  "Bids Asks P1"
                ]
              },
              "bids-asks-p2": {
                "scaleMargins": {
                  "top": 0.62,
                  "bottom": 0.21
                },
                "indicators": [
                  "Bids Asks P2"
                ]
              },
              "bids-asks-p3": {
                "scaleMargins": {
                  "top": 0.8,
                  "bottom": 0.05
                },
                "indicators": [
                  "Bids Asks P3"
                ]
              },
              "ob-speed": {
                "scaleMargins": {
                  "top": 0.94,
                  "bottom": 0
                },
                "indicators": [
                  "OB speed"
                ]
              }
            },
            "layouting": false,
            "showIndicators": true,
            "timeframe": "60",
            "refreshRate": 1000,
            "showAlerts": true,
            "showAlertsLabel": true,
            "showLegend": true,
            "fillGapsWithEmpty": true,
            "showHorizontalGridlines": false,
            "horizontalGridlinesColor": "rgba(255,255,255,.1)",
            "showVerticalGridlines": false,
            "verticalGridlinesColor": "rgba(255,255,255,.1)",
            "showWatermark": true,
            "watermarkColor": "rgba(255,255,255,.1)",
            "showBorder": true,
            "borderColor": null,
            "showLeftScale": false,
            "showRightScale": true,
            "showTimeScale": true,
            "hiddenMarkets": {},
            "barSpacing": 1.0638785235953876
          },
          "markets": [
            "BINANCE:btcusdt",
            "ORDERBOOK:BINANCE-BTCUSDT"
          ]
        },
        "chart copy 3": {
          "id": "chart copy 3",
          "name": "",
          "type": "chart",
          "zoom": 1.5,
          "settings": {
            "indicatorsErrors": {},
            "indicators": {
              "ob-speed": {
                "script": "obUpdates = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zupdates + ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zupdates\r\n\r\nplothistogram(obUpdates)\r\nline(ema(obUpdates, 21))",
                "name": "OB speed",
                "priceScaleId": "ob-speed",
                "id": "ob-speed",
                "options": {
                  "priceScaleId": "ob-speed",
                  "scaleMargins": {
                    "top": 0.94,
                    "bottom": 0
                  },
                  "visible": true,
                  "togglePerp": true,
                  "toggleSpot": true,
                  "priceFormat": {
                    "type": "volume",
                    "precision": 2,
                    "minMove": 0.01,
                    "auto": true
                  }
                },
                "series": [
                  "ob-speed",
                  "525fejg7"
                ],
                "displayName": "OB speed",
                "unsavedChanges": false,
                "preview": {},
                "createdAt": 1701126916031,
                "updatedAt": 1702416144379,
                "optionsDefinitions": {}
              },
              "bids-asks-s": {
                "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\nplotcloudarea(_bids, _asks, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
                "id": "bids-asks-s",
                "name": "Bids Asks S",
                "options": {
                  "priceScaleId": "bids-asks",
                  "scaleMargins": {
                    "top": 0.26,
                    "bottom": 0.57
                  },
                  "togglePerp": false,
                  "toggleSpot": true,
                  "toggleBinance": false,
                  "toggleC": null,
                  "toggleRatio0": null,
                  "toggleRatio1": null,
                  "toggleRatio2": null,
                  "toggleRatio3": null,
                  "toggleCoinbase": false,
                  "toggleBitmex": false,
                  "toggleBand1": true,
                  "toggleBand2": false,
                  "toggleBand3": false,
                  "toggleBand4": false,
                  "lastValueVisible": true,
                  "priceFormat": {
                    "type": "volume",
                    "precision": 2,
                    "minMove": 0.01,
                    "auto": true
                  },
                  "visible": true
                },
                "description": null,
                "createdAt": 1703182792738,
                "updatedAt": 1703182792738,
                "unsavedChanges": false,
                "optionsDefinitions": {},
                "displayName": "Bids Asks S",
                "series": [
                  "bids-asks-s"
                ]
              },
              "bids-asks-s1": {
                "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\nplotcloudarea(_bids, _asks, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
                "id": "bids-asks-s1",
                "name": "Bids Asks S1",
                "options": {
                  "priceScaleId": "bids-asks-p1",
                  "scaleMargins": {
                    "top": 0.44,
                    "bottom": 0.39
                  },
                  "togglePerp": false,
                  "toggleSpot": true,
                  "toggleBinance": false,
                  "toggleC": null,
                  "toggleRatio0": null,
                  "toggleRatio1": null,
                  "toggleRatio2": null,
                  "toggleRatio3": null,
                  "toggleCoinbase": false,
                  "toggleBitmex": false,
                  "toggleBand1": false,
                  "toggleBand2": true,
                  "toggleBand3": false,
                  "toggleBand4": false,
                  "lastValueVisible": true,
                  "priceFormat": {
                    "type": "volume",
                    "precision": 2,
                    "minMove": 0.01,
                    "auto": true
                  },
                  "visible": true
                },
                "description": null,
                "unsavedChanges": false,
                "optionsDefinitions": {},
                "displayName": "Bids Asks S1",
                "series": [
                  "bids-asks-s1"
                ]
              },
              "bids-asks-s2": {
                "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\nplotcloudarea(_bids, _asks, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
                "id": "bids-asks-s2",
                "name": "Bids Asks S2",
                "options": {
                  "priceScaleId": "bids-asks-p2",
                  "scaleMargins": {
                    "top": 0.62,
                    "bottom": 0.21
                  },
                  "togglePerp": false,
                  "toggleSpot": true,
                  "toggleBinance": false,
                  "toggleC": null,
                  "toggleRatio0": null,
                  "toggleRatio1": null,
                  "toggleRatio2": null,
                  "toggleRatio3": null,
                  "toggleCoinbase": false,
                  "toggleBitmex": false,
                  "toggleBand1": false,
                  "toggleBand2": false,
                  "toggleBand3": true,
                  "toggleBand4": false,
                  "lastValueVisible": true,
                  "priceFormat": {
                    "type": "volume",
                    "precision": 2,
                    "minMove": 0.01,
                    "auto": true
                  },
                  "visible": true
                },
                "description": null,
                "unsavedChanges": false,
                "optionsDefinitions": {},
                "displayName": "Bids Asks S2",
                "series": [
                  "bids-asks-s2"
                ]
              },
              "bids-asks-s3": {
                "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSDLEVELS.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSDLEVELS.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDTLEVELS'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSDLEVELS'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSDLEVELS'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\nplotcloudarea(_bids, _asks, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
                "id": "bids-asks-s3",
                "name": "Bids Asks S3",
                "options": {
                  "priceScaleId": "bids-asks-p3",
                  "scaleMargins": {
                    "top": 0.8,
                    "bottom": 0.05
                  },
                  "togglePerp": false,
                  "toggleSpot": true,
                  "toggleBinance": false,
                  "toggleC": null,
                  "toggleRatio0": null,
                  "toggleRatio1": null,
                  "toggleRatio2": null,
                  "toggleRatio3": null,
                  "toggleCoinbase": false,
                  "toggleBitmex": false,
                  "toggleBand1": false,
                  "toggleBand2": false,
                  "toggleBand3": false,
                  "toggleBand4": true,
                  "lastValueVisible": true,
                  "priceFormat": {
                    "type": "volume",
                    "precision": 2,
                    "minMove": 0.01,
                    "auto": true
                  },
                  "visible": true
                },
                "description": null,
                "unsavedChanges": false,
                "optionsDefinitions": {},
                "displayName": "Bids Asks S3",
                "series": [
                  "bids-asks-s3"
                ]
              },
              "price-coinbase": {
                "script": "src = { sources: { \"COINBASE:BTC-USD\":COINBASE:BTC-USD }, localTimestamp: time }\r\n\r\nvar ohlc = options.useHeikinAshi ? avg_heikinashi(src) : options.useGaps ? avg_ohlc_with_gaps(src) : avg_ohlc(src)\r\n\r\nplotcandlestick(ohlc, id=price)",
                "name": "Price Coinbase",
                "priceScaleId": "right",
                "id": "price-coinbase",
                "options": {
                  "priceScaleId": "right",
                  "useGaps": null,
                  "useHeikinAshi": null,
                  "visible": true
                },
                "series": [
                  "price copy 1"
                ],
                "displayName": "Price Coinbase",
                "unsavedChanges": false,
                "preview": {},
                "createdAt": 1701644059121,
                "updatedAt": 1701644307369,
                "optionsDefinitions": {}
              }
            },
            "indicatorOrder": [
              "ob-speed",
              "bids-asks-s",
              "bids-asks-s1",
              "bids-asks-s2",
              "bids-asks-s3",
              "price-coinbase"
            ],
            "priceScales": {
              "right": {
                "scaleMargins": {
                  "top": 0.02,
                  "bottom": 0.78
                },
                "priceFormat": {
                  "precision": 2,
                  "minMove": 0.01
                },
                "indicators": [
                  "Price Perp"
                ]
              },
              "cvd": {
                "scaleMargins": {
                  "top": 0.01,
                  "bottom": 0
                }
              },
              "volume_liquidations": {
                "scaleMargins": {
                  "top": 0,
                  "bottom": 0.96
                }
              },
              "volume": {
                "scaleMargins": {
                  "top": 0.87,
                  "bottom": 0
                }
              },
              "bids-asks": {
                "scaleMargins": {
                  "top": 0.26,
                  "bottom": 0.57
                },
                "indicators": [
                  "Bids Asks P"
                ]
              },
              "bids-asks-p1": {
                "scaleMargins": {
                  "top": 0.44,
                  "bottom": 0.39
                },
                "indicators": [
                  "Bids Asks P1"
                ]
              },
              "bids-asks-p2": {
                "scaleMargins": {
                  "top": 0.62,
                  "bottom": 0.21
                },
                "indicators": [
                  "Bids Asks P2"
                ]
              },
              "bids-asks-p3": {
                "scaleMargins": {
                  "top": 0.8,
                  "bottom": 0.05
                },
                "indicators": [
                  "Bids Asks P3"
                ]
              },
              "ob-speed": {
                "scaleMargins": {
                  "top": 0.94,
                  "bottom": 0
                },
                "indicators": [
                  "OB speed"
                ]
              }
            },
            "layouting": false,
            "showIndicators": true,
            "timeframe": "60",
            "refreshRate": 1000,
            "showAlerts": true,
            "showAlertsLabel": true,
            "showLegend": true,
            "fillGapsWithEmpty": true,
            "showHorizontalGridlines": false,
            "horizontalGridlinesColor": "rgba(255,255,255,.1)",
            "showVerticalGridlines": false,
            "verticalGridlinesColor": "rgba(255,255,255,.1)",
            "showWatermark": true,
            "watermarkColor": "rgba(255,255,255,.1)",
            "showBorder": true,
            "borderColor": null,
            "showLeftScale": false,
            "showRightScale": true,
            "showTimeScale": true,
            "hiddenMarkets": {},
            "barSpacing": 1.0638785235953876
          },
          "markets": [
            "COINBASE:BTC-USD",
            "ORDERBOOK:COINBASE-BTCUSD"
          ]
        }
      },
      "syncedWithParentFrame": []
    },
    "chart": {
      "indicatorsErrors": {},
      "indicators": {
        "price-perp": {
          "enabled": true,
          "name": "Price Perp",
          "script": "src = { sources: { \"BINANCE_FUTURES:btcusdt\":BINANCE_FUTURES:btcusdt }, localTimestamp: time }\r\n\r\nvar ohlc = options.useHeikinAshi ? avg_heikinashi(src) : options.useGaps ? avg_ohlc_with_gaps(src) : avg_ohlc(src)\r\n\r\nplotcandlestick(ohlc, id=price)",
          "options": {
            "priceScaleId": "right",
            "priceFormat": {
              "auto": true,
              "precision": 1,
              "minMove": 0.1
            },
            "priceLineVisible": true,
            "lastValueVisible": true,
            "borderVisible": false,
            "upColor": "rgba(255,235,59,0.52)",
            "downColor": "rgba(242,54,69,0.64)",
            "borderUpColor": "rgba(255,245,157,0.66)",
            "borderDownColor": "rgba(178,40,51,0.52)",
            "wickUpColor": "rgb(223,211,144)",
            "wickDownColor": "rgba(239,67,82,0.47)",
            "useGaps": false,
            "useHeikinAshi": false,
            "scaleMargins": {
              "top": 0.02,
              "bottom": 0.78
            },
            "visible": true
          },
          "id": "price-perp",
          "createdAt": 1700269685372,
          "updatedAt": 1703140221229,
          "series": [
            "price"
          ],
          "unsavedChanges": true,
          "preview": {},
          "optionsDefinitions": {},
          "displayName": "Price Perp"
        },
        "bids-asks-p": {
          "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSD.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSD.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\n// cloudarea(lowerValue: number, higherValue: number)\r\n// - `higherValue` (`number`) - the value of the item which is expected to be higher (default: green line)\r\n// - `lowerValue` (`number`) - the value of the item which is expected to be lower (default: red line)\r\nplotcloudarea(_asks, _bids, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
          "id": "bids-asks-p",
          "name": "Bids Asks P",
          "options": {
            "priceScaleId": "bids-asks",
            "scaleMargins": {
              "top": 0.24,
              "bottom": 0.61
            },
            "togglePerp": true,
            "toggleSpot": false,
            "toggleBinance": false,
            "toggleC": null,
            "toggleRatio0": null,
            "toggleRatio1": null,
            "toggleRatio2": null,
            "toggleRatio3": null,
            "toggleCoinbase": false,
            "toggleBitmex": false,
            "toggleBand1": true,
            "toggleBand2": false,
            "toggleBand3": false,
            "toggleBand4": false,
            "lastValueVisible": true,
            "priceFormat": {
              "type": "volume",
              "precision": 2,
              "minMove": 0.01,
              "auto": true
            },
            "visible": true
          },
          "description": null,
          "createdAt": 1703182792738,
          "updatedAt": 1703182792738,
          "unsavedChanges": false,
          "optionsDefinitions": {},
          "displayName": "Bids Asks P",
          "series": [
            "bids-asks-p"
          ]
        },
        "bids-asks-p1": {
          "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSD.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSD.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\n// cloudarea(lowerValue: number, higherValue: number)\r\n// - `higherValue` (`number`) - the value of the item which is expected to be higher (default: green line)\r\n// - `lowerValue` (`number`) - the value of the item which is expected to be lower (default: red line)\r\nplotcloudarea(_asks, _bids, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
          "id": "bids-asks-p1",
          "name": "Bids Asks P1",
          "options": {
            "priceScaleId": "bids-asks-p1",
            "scaleMargins": {
              "top": 0.39,
              "bottom": 0.46
            },
            "togglePerp": true,
            "toggleSpot": false,
            "toggleBinance": false,
            "toggleC": null,
            "toggleRatio0": null,
            "toggleRatio1": null,
            "toggleRatio2": null,
            "toggleRatio3": null,
            "toggleCoinbase": false,
            "toggleBitmex": false,
            "toggleBand1": false,
            "toggleBand2": true,
            "toggleBand3": false,
            "toggleBand4": false,
            "lastValueVisible": true,
            "priceFormat": {
              "type": "volume",
              "precision": 2,
              "minMove": 0.01,
              "auto": true
            },
            "visible": true
          },
          "description": null,
          "unsavedChanges": false,
          "optionsDefinitions": {},
          "displayName": "Bids Asks P1",
          "series": [
            "bids-asks-p1"
          ]
        },
        "bids-asks-p2": {
          "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSD.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSD.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\n// cloudarea(lowerValue: number, higherValue: number)\r\n// - `higherValue` (`number`) - the value of the item which is expected to be higher (default: green line)\r\n// - `lowerValue` (`number`) - the value of the item which is expected to be lower (default: red line)\r\nplotcloudarea(_asks, _bids, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
          "id": "bids-asks-p2",
          "name": "Bids Asks P2",
          "options": {
            "priceScaleId": "bids-asks-p2",
            "scaleMargins": {
              "top": 0.54,
              "bottom": 0.31
            },
            "togglePerp": true,
            "toggleSpot": false,
            "toggleBinance": false,
            "toggleC": null,
            "toggleRatio0": null,
            "toggleRatio1": null,
            "toggleRatio2": null,
            "toggleRatio3": null,
            "toggleCoinbase": false,
            "toggleBitmex": false,
            "toggleBand1": false,
            "toggleBand2": false,
            "toggleBand3": true,
            "toggleBand4": false,
            "lastValueVisible": true,
            "priceFormat": {
              "type": "volume",
              "precision": 2,
              "minMove": 0.01,
              "auto": true
            },
            "visible": true
          },
          "description": null,
          "unsavedChanges": false,
          "optionsDefinitions": {},
          "displayName": "Bids Asks P2",
          "series": [
            "bids-asks-p2"
          ]
        },
        "bids-asks-p3": {
          "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSD.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSD.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\n// cloudarea(lowerValue: number, higherValue: number)\r\n// - `higherValue` (`number`) - the value of the item which is expected to be higher (default: green line)\r\n// - `lowerValue` (`number`) - the value of the item which is expected to be lower (default: red line)\r\nplotcloudarea(_asks, _bids, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
          "id": "bids-asks-p3",
          "name": "Bids Asks P3",
          "options": {
            "priceScaleId": "bids-asks-p3",
            "scaleMargins": {
              "top": 0.69,
              "bottom": 0.16
            },
            "togglePerp": true,
            "toggleSpot": false,
            "toggleBinance": false,
            "toggleC": null,
            "toggleRatio0": null,
            "toggleRatio1": null,
            "toggleRatio2": null,
            "toggleRatio3": null,
            "toggleCoinbase": false,
            "toggleBitmex": false,
            "toggleBand1": false,
            "toggleBand2": false,
            "toggleBand3": false,
            "toggleBand4": true,
            "lastValueVisible": true,
            "priceFormat": {
              "type": "volume",
              "precision": 2,
              "minMove": 0.01,
              "auto": true
            },
            "visible": true
          },
          "description": null,
          "unsavedChanges": true,
          "optionsDefinitions": {},
          "displayName": "Bids Asks P3",
          "series": [
            "bids-asks-p3"
          ]
        },
        "ob-speed": {
          "script": "plothistogram(zupdates)\r\nline(ema(zupdates, 21))",
          "name": "OB speed",
          "priceScaleId": "ob-speed",
          "id": "ob-speed",
          "options": {
            "priceScaleId": "ob-speed",
            "scaleMargins": {
              "top": 0.94,
              "bottom": 0
            },
            "visible": false,
            "togglePerp": true,
            "toggleSpot": true,
            "priceFormat": {
              "type": "volume",
              "precision": 2,
              "minMove": 0.01,
              "auto": true
            }
          },
          "series": [
            "ob-speed",
            "fy8v2d1x"
          ],
          "displayName": "OB speed",
          "unsavedChanges": false,
          "preview": {},
          "createdAt": 1701126916031,
          "updatedAt": 1702416144379,
          "optionsDefinitions": {}
        },
        "bids-asks-p4": {
          "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSD.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSD.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\n// cloudarea(lowerValue: number, higherValue: number)\r\n// - `higherValue` (`number`) - the value of the item which is expected to be higher (default: green line)\r\n// - `lowerValue` (`number`) - the value of the item which is expected to be lower (default: red line)\r\nplotcloudarea(_asks, _bids, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
          "id": "bids-asks-p4",
          "name": "Bids Asks P4",
          "options": {
            "priceScaleId": "bids-asks-p4",
            "scaleMargins": {
              "top": 0.84,
              "bottom": 0.01
            },
            "togglePerp": true,
            "toggleSpot": false,
            "toggleBinance": false,
            "toggleC": null,
            "toggleRatio0": null,
            "toggleRatio1": null,
            "toggleRatio2": null,
            "toggleRatio3": null,
            "toggleCoinbase": false,
            "toggleBitmex": false,
            "toggleBand1": true,
            "toggleBand2": true,
            "toggleBand3": true,
            "toggleBand4": true,
            "lastValueVisible": true,
            "priceFormat": {
              "type": "volume",
              "precision": 2,
              "minMove": 0.01,
              "auto": true
            },
            "visible": true
          },
          "description": null,
          "unsavedChanges": false,
          "optionsDefinitions": {},
          "displayName": "Bids Asks P4",
          "series": [
            "bids-asks-p4"
          ],
          "libraryId": "bids-asks-p4",
          "createdAt": 1738706683110,
          "updatedAt": 1738706683110
        }
      },
      "indicatorOrder": [
        "ob-speed",
        "price-perp",
        "bids-asks-p",
        "bids-asks-p1",
        "bids-asks-p2",
        "bids-asks-p3",
        "bids-asks-p4"
      ],
      "priceScales": {
        "right": {
          "scaleMargins": {
            "top": 0.02,
            "bottom": 0.78
          },
          "priceFormat": {
            "precision": 1,
            "minMove": 0.1
          },
          "indicators": [
            "Price Perp"
          ]
        },
        "cvd": {
          "scaleMargins": {
            "top": 0.01,
            "bottom": 0
          }
        },
        "volume_liquidations": {
          "scaleMargins": {
            "top": 0,
            "bottom": 0.96
          }
        },
        "volume": {
          "scaleMargins": {
            "top": 0.87,
            "bottom": 0
          }
        },
        "bids-asks": {
          "scaleMargins": {
            "top": 0.24,
            "bottom": 0.61
          },
          "indicators": [
            "Bids Asks P"
          ]
        },
        "bids-asks-p1": {
          "scaleMargins": {
            "top": 0.39,
            "bottom": 0.46
          },
          "indicators": [
            "Bids Asks P1"
          ]
        },
        "bids-asks-p2": {
          "scaleMargins": {
            "top": 0.54,
            "bottom": 0.31
          },
          "indicators": [
            "Bids Asks P2"
          ]
        },
        "bids-asks-p3": {
          "scaleMargins": {
            "top": 0.69,
            "bottom": 0.16
          },
          "indicators": [
            "Bids Asks P3"
          ]
        },
        "ob-speed": {
          "scaleMargins": {
            "top": 0.94,
            "bottom": 0
          },
          "indicators": [
            "OB speed"
          ]
        },
        "bids-asks-p4": {
          "scaleMargins": {
            "top": 0.84,
            "bottom": 0.01
          },
          "indicators": [
            "Bids Asks P4"
          ]
        }
      },
      "layouting": false,
      "showIndicators": true,
      "timeframe": "60",
      "refreshRate": 1000,
      "showAlerts": true,
      "showAlertsLabel": true,
      "showLegend": false,
      "fillGapsWithEmpty": true,
      "showHorizontalGridlines": false,
      "horizontalGridlinesColor": "rgba(255,255,255,.1)",
      "showVerticalGridlines": false,
      "verticalGridlinesColor": "rgba(255,255,255,.1)",
      "showWatermark": true,
      "watermarkColor": "rgba(255,255,255,.1)",
      "showBorder": true,
      "borderColor": null,
      "textColor": null,
      "showLeftScale": false,
      "showRightScale": true,
      "showTimeScale": true,
      "hiddenMarkets": {},
      "barSpacing": 3.355534804485243,
      "_id": "chart"
    },
    "settings": {
      "_id": "settings",
      "preferQuoteCurrencySize": true,
      "aggregationLength": 1,
      "calculateSlippage": null,
      "wsProxyUrl": null,
      "disableAnimations": false,
      "autoHideHeaders": true,
      "autoHideNames": true,
      "theme": "dark",
      "backgroundColor": "rgb(23,27,41)",
      "textColor": "",
      "buyColor": "rgb(100, 157, 102)",
      "sellColor": "rgb(239, 67, 82)",
      "timezoneOffset": 46800000,
      "useAudio": false,
      "audioVolume": 1,
      "audioFilters": {
        "PingPongDelay": true,
        "Compressor": false,
        "Delay": false,
        "HighPassFilter": true,
        "LowPassFilter": false
      },
      "sections": [
        "settings-workspaces",
        "settings-trades",
        "timeframe-minutes",
        "search-exchanges",
        "search-extras",
        "indicator-left-script",
        "indicator-right-scale",
        "settings-other",
        "indicator-left-colors"
      ],
      "searchTypes": {
        "recentSearches": true,
        "historical": false,
        "spots": true,
        "perpetuals": true,
        "futures": false,
        "normalize": false,
        "mergeUsdt": false
      },
      "searchQuotes": {},
      "previousSearchSelections": [
        {
          "label": "BTCUSD+BINANCEBTCUSD",
          "markets": [
            "BINANCE:btcusdt",
            "ORDERBOOK:BINANCE-BTCUSDT"
          ],
          "count": 2
        },
        {
          "label": "BTCUSD+COINBASEBTCUSD",
          "markets": [
            "COINBASE:BTC-USD",
            "ORDERBOOK:COINBASE-BTCUSD"
          ],
          "count": 2
        },
        {
          "label": "BTCUSD+AGGRSPOTBTCUSD",
          "markets": [
            "COINBASE:BTC-USD",
            "ORDERBOOK:AGGRSPOT-BTCUSD"
          ],
          "count": 2
        },
        {
          "label": "BTCUSD+AGGRPERPBTCUSD",
          "markets": [
            "BINANCE_FUTURES:btcusdt",
            "ORDERBOOK:AGGRPERP-BTCUSD"
          ],
          "count": 2
        },
        {
          "label": "BTCUSD+COINBASEBTCUSDLEVELS",
          "markets": [
            "COINBASE:BTC-USD",
            "ORDERBOOK:COINBASE-BTCUSDLEVELS"
          ],
          "count": 2
        },
        {
          "label": "BTCUSD+BINANCEBTCUSDTLEVELS",
          "markets": [
            "BINANCE:btcusdt",
            "ORDERBOOK:BINANCE-BTCUSDTLEVELS"
          ],
          "count": 2
        },
        {
          "label": "BTCUSD+AGGRSPOTBTCUSDLEVELS",
          "markets": [
            "COINBASE:BTC-USD",
            "ORDERBOOK:AGGRSPOT-BTCUSDLEVELS"
          ],
          "count": 2
        },
        {
          "label": "BTCUSD+AGGRPERPBTCUSDLEVELS",
          "markets": [
            "BINANCE_FUTURES:btcusdt",
            "ORDERBOOK:AGGRPERP-BTCUSDLEVELS"
          ],
          "count": 2
        }
      ],
      "searchExchanges": {
        "AGGR": false,
        "BINANCE": false,
        "BINANCE_FUTURES": false,
        "BINANCE_US": false,
        "BITFINEX": false,
        "BITGET": false,
        "BITMART": false,
        "BITMEX": false,
        "BITSTAMP": false,
        "BYBIT": false,
        "COINBASE": false,
        "CRYPTOCOM": false,
        "DERIBIT": false,
        "DYDX": false,
        "GATEIO": false,
        "HITBTC": false,
        "HUOBI": false,
        "KRAKEN": false,
        "KUCOIN": false,
        "MEXC": false,
        "OKEX": false,
        "ORDERBOOK": true,
        "PHEMEX": false,
        "POLONIEX": false,
        "UNISWAP": false
      },
      "timeframes": [
        {
          "label": "1s",
          "value": "1"
        },
        {
          "label": "3s",
          "value": "3"
        },
        {
          "label": "5s",
          "value": "5"
        },
        {
          "label": "10s",
          "value": "10"
        },
        {
          "label": "15s",
          "value": "15"
        },
        {
          "label": "30s",
          "value": "30"
        },
        {
          "label": "1m",
          "value": "60"
        },
        {
          "label": "3m",
          "value": "180"
        },
        {
          "label": "5m",
          "value": "300"
        },
        {
          "label": "15m",
          "value": "900"
        },
        {
          "label": "21m",
          "value": "1260"
        },
        {
          "label": "30m",
          "value": "1800"
        },
        {
          "label": "1h",
          "value": "3600"
        },
        {
          "label": "2h",
          "value": "7200"
        },
        {
          "label": "4h",
          "value": "14400"
        },
        {
          "label": "6h",
          "value": "21600"
        },
        {
          "label": "8h",
          "value": "28800"
        },
        {
          "label": "12h",
          "value": "43200"
        },
        {
          "label": "1d",
          "value": "86400"
        },
        {
          "label": "21 ticks",
          "value": "21t"
        },
        {
          "label": "50 ticks",
          "value": "50t"
        },
        {
          "label": "89 ticks",
          "value": "89t"
        },
        {
          "label": "100 ticks",
          "value": "100t"
        },
        {
          "label": "200 ticks",
          "value": "200t"
        },
        {
          "label": "610 ticks",
          "value": "610t"
        },
        {
          "label": "1000 ticks",
          "value": "1000t"
        },
        {
          "label": "1597 ticks",
          "value": "1597t"
        }
      ],
      "favoriteTimeframes": {},
      "normalizeWatermarks": true,
      "alerts": false,
      "alertsColor": "rgb(0,255,0)",
      "alertsLineStyle": 1,
      "alertsLineWidth": 1,
      "alertsClick": false,
      "alertSound": null,
      "showThresholdsAsTable": true,
      "indicatorDialogNavigation": "{\"optionsQuery\":\"\",\"editorOptions\":{},\"columnWidth\":240,\"tab\":\"options\"}"
    },
    "chart copy 1": {
      "indicatorsErrors": {},
      "indicators": {
        "ob-speed": {
          "script": "plothistogram(zupdates)\r\nline(ema(zupdates, 21))",
          "name": "OB speed",
          "priceScaleId": "ob-speed",
          "id": "ob-speed",
          "options": {
            "priceScaleId": "ob-speed",
            "scaleMargins": {
              "top": 0.94,
              "bottom": 0
            },
            "visible": false,
            "togglePerp": true,
            "toggleSpot": true,
            "priceFormat": {
              "type": "volume",
              "precision": 2,
              "minMove": 0.01,
              "auto": true
            }
          },
          "series": [
            "ob-speed",
            "bckyuhxt"
          ],
          "displayName": "OB speed",
          "unsavedChanges": false,
          "preview": {},
          "createdAt": 1701126916031,
          "updatedAt": 1702416144379,
          "optionsDefinitions": {}
        },
        "bids-asks-s": {
          "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSD.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSD.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\n// cloudarea(lowerValue: number, higherValue: number)\r\n// - `higherValue` (`number`) - the value of the item which is expected to be higher (default: green line)\r\n// - `lowerValue` (`number`) - the value of the item which is expected to be lower (default: red line)\r\nplotcloudarea(_asks, _bids, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
          "id": "bids-asks-s",
          "name": "Bids Asks S",
          "options": {
            "priceScaleId": "bids-asks",
            "scaleMargins": {
              "top": 0.24,
              "bottom": 0.61
            },
            "togglePerp": false,
            "toggleSpot": true,
            "toggleBinance": false,
            "toggleC": null,
            "toggleRatio0": null,
            "toggleRatio1": null,
            "toggleRatio2": null,
            "toggleRatio3": null,
            "toggleCoinbase": false,
            "toggleBitmex": false,
            "toggleBand1": true,
            "toggleBand2": false,
            "toggleBand3": false,
            "toggleBand4": false,
            "lastValueVisible": true,
            "priceFormat": {
              "type": "volume",
              "precision": 2,
              "minMove": 0.01,
              "auto": true
            },
            "visible": true
          },
          "description": null,
          "createdAt": 1703182792738,
          "updatedAt": 1703182792738,
          "unsavedChanges": false,
          "optionsDefinitions": {},
          "displayName": "Bids Asks S",
          "series": [
            "bids-asks-s"
          ]
        },
        "bids-asks-s1": {
          "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSD.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSD.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\n// cloudarea(lowerValue: number, higherValue: number)\r\n// - `higherValue` (`number`) - the value of the item which is expected to be higher (default: green line)\r\n// - `lowerValue` (`number`) - the value of the item which is expected to be lower (default: red line)\r\nplotcloudarea(_asks, _bids, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
          "id": "bids-asks-s1",
          "name": "Bids Asks S1",
          "options": {
            "priceScaleId": "bids-asks-p1",
            "scaleMargins": {
              "top": 0.38,
              "bottom": 0.47
            },
            "togglePerp": false,
            "toggleSpot": true,
            "toggleBinance": false,
            "toggleC": null,
            "toggleRatio0": null,
            "toggleRatio1": null,
            "toggleRatio2": null,
            "toggleRatio3": null,
            "toggleCoinbase": false,
            "toggleBitmex": false,
            "toggleBand1": false,
            "toggleBand2": true,
            "toggleBand3": false,
            "toggleBand4": false,
            "lastValueVisible": true,
            "priceFormat": {
              "type": "volume",
              "precision": 2,
              "minMove": 0.01,
              "auto": true
            },
            "visible": true
          },
          "description": null,
          "unsavedChanges": false,
          "optionsDefinitions": {},
          "displayName": "Bids Asks S1",
          "series": [
            "bids-asks-s1"
          ]
        },
        "bids-asks-s2": {
          "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSD.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSD.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\n// cloudarea(lowerValue: number, higherValue: number)\r\n// - `higherValue` (`number`) - the value of the item which is expected to be higher (default: green line)\r\n// - `lowerValue` (`number`) - the value of the item which is expected to be lower (default: red line)\r\nplotcloudarea(_asks, _bids, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
          "id": "bids-asks-s2",
          "name": "Bids Asks S2",
          "options": {
            "priceScaleId": "bids-asks-p2",
            "scaleMargins": {
              "top": 0.53,
              "bottom": 0.32
            },
            "togglePerp": false,
            "toggleSpot": true,
            "toggleBinance": false,
            "toggleC": null,
            "toggleRatio0": null,
            "toggleRatio1": null,
            "toggleRatio2": null,
            "toggleRatio3": null,
            "toggleCoinbase": false,
            "toggleBitmex": false,
            "toggleBand1": false,
            "toggleBand2": false,
            "toggleBand3": true,
            "toggleBand4": false,
            "lastValueVisible": true,
            "priceFormat": {
              "type": "volume",
              "precision": 2,
              "minMove": 0.01,
              "auto": true
            },
            "visible": true
          },
          "description": null,
          "unsavedChanges": true,
          "optionsDefinitions": {},
          "displayName": "Bids Asks S2",
          "series": [
            "bids-asks-s2"
          ]
        },
        "bids-asks-s3": {
          "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSD.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSD.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\n// cloudarea(lowerValue: number, higherValue: number)\r\n// - `higherValue` (`number`) - the value of the item which is expected to be higher (default: green line)\r\n// - `lowerValue` (`number`) - the value of the item which is expected to be lower (default: red line)\r\nplotcloudarea(_asks, _bids, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
          "id": "bids-asks-s3",
          "name": "Bids Asks S3",
          "options": {
            "priceScaleId": "bids-asks-p3",
            "scaleMargins": {
              "top": 0.68,
              "bottom": 0.17
            },
            "togglePerp": false,
            "toggleSpot": true,
            "toggleBinance": false,
            "toggleC": null,
            "toggleRatio0": null,
            "toggleRatio1": null,
            "toggleRatio2": null,
            "toggleRatio3": null,
            "toggleCoinbase": false,
            "toggleBitmex": false,
            "toggleBand1": false,
            "toggleBand2": false,
            "toggleBand3": false,
            "toggleBand4": true,
            "lastValueVisible": true,
            "priceFormat": {
              "type": "volume",
              "precision": 2,
              "minMove": 0.01,
              "auto": true
            },
            "visible": true
          },
          "description": null,
          "unsavedChanges": false,
          "optionsDefinitions": {},
          "displayName": "Bids Asks S3",
          "series": [
            "bids-asks-s3"
          ]
        },
        "price-coinbase": {
          "script": "src = { sources: { \"COINBASE:BTC-USD\":COINBASE:BTC-USD }, localTimestamp: time }\r\n\r\nvar ohlc = options.useHeikinAshi ? avg_heikinashi(src) : options.useGaps ? avg_ohlc_with_gaps(src) : avg_ohlc(src)\r\n\r\nplotcandlestick(ohlc, id=price)",
          "name": "Price Coinbase",
          "priceScaleId": "right",
          "id": "price-coinbase",
          "options": {
            "priceScaleId": "right",
            "useGaps": null,
            "useHeikinAshi": null,
            "visible": true
          },
          "series": [
            "price"
          ],
          "displayName": "Price Coinbase",
          "unsavedChanges": false,
          "preview": {},
          "createdAt": 1701644059121,
          "updatedAt": 1701644307369,
          "optionsDefinitions": {}
        },
        "bids-asks-s4": {
          "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSD.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSD.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\n// cloudarea(lowerValue: number, higherValue: number)\r\n// - `higherValue` (`number`) - the value of the item which is expected to be higher (default: green line)\r\n// - `lowerValue` (`number`) - the value of the item which is expected to be lower (default: red line)\r\nplotcloudarea(_asks, _bids, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
          "id": "bids-asks-s4",
          "name": "Bids Asks S4",
          "options": {
            "priceScaleId": "bids-asks-s4",
            "scaleMargins": {
              "top": 0.83,
              "bottom": 0.02
            },
            "togglePerp": false,
            "toggleSpot": true,
            "toggleBinance": false,
            "toggleC": null,
            "toggleRatio0": null,
            "toggleRatio1": null,
            "toggleRatio2": null,
            "toggleRatio3": null,
            "toggleCoinbase": false,
            "toggleBitmex": false,
            "toggleBand1": true,
            "toggleBand2": true,
            "toggleBand3": true,
            "toggleBand4": true,
            "lastValueVisible": true,
            "priceFormat": {
              "type": "volume",
              "precision": 2,
              "minMove": 0.01,
              "auto": true
            },
            "visible": true
          },
          "description": null,
          "unsavedChanges": false,
          "optionsDefinitions": {},
          "displayName": "Bids Asks S4",
          "series": [
            "bids-asks-s4"
          ],
          "libraryId": "bids-asks-s4",
          "createdAt": 1738706677512,
          "updatedAt": 1738706677512
        }
      },
      "indicatorOrder": [
        "ob-speed",
        "bids-asks-s",
        "bids-asks-s1",
        "bids-asks-s2",
        "bids-asks-s3",
        "price-coinbase",
        "bids-asks-s4"
      ],
      "priceScales": {
        "right": {
          "scaleMargins": {
            "top": 0.02,
            "bottom": 0.78
          },
          "priceFormat": {
            "precision": 2,
            "minMove": 0.01
          },
          "indicators": [
            "Price Perp"
          ]
        },
        "cvd": {
          "scaleMargins": {
            "top": 0.01,
            "bottom": 0
          }
        },
        "volume_liquidations": {
          "scaleMargins": {
            "top": 0,
            "bottom": 0.96
          }
        },
        "volume": {
          "scaleMargins": {
            "top": 0.87,
            "bottom": 0
          }
        },
        "bids-asks": {
          "scaleMargins": {
            "top": 0.24,
            "bottom": 0.61
          },
          "indicators": [
            "Bids Asks S"
          ]
        },
        "bids-asks-p1": {
          "scaleMargins": {
            "top": 0.38,
            "bottom": 0.47
          },
          "indicators": [
            "Bids Asks S1"
          ]
        },
        "bids-asks-p2": {
          "scaleMargins": {
            "top": 0.53,
            "bottom": 0.32
          },
          "indicators": [
            "Bids Asks S2"
          ]
        },
        "bids-asks-p3": {
          "scaleMargins": {
            "top": 0.68,
            "bottom": 0.17
          },
          "indicators": [
            "Bids Asks S3"
          ]
        },
        "ob-speed": {
          "scaleMargins": {
            "top": 0.94,
            "bottom": 0
          },
          "indicators": [
            "OB speed"
          ]
        },
        "bids-asks-s4": {
          "scaleMargins": {
            "top": 0.83,
            "bottom": 0.02
          },
          "indicators": [
            "Bids Asks S4"
          ]
        }
      },
      "layouting": false,
      "showIndicators": true,
      "timeframe": "60",
      "refreshRate": 1000,
      "showAlerts": true,
      "showAlertsLabel": true,
      "showLegend": false,
      "fillGapsWithEmpty": true,
      "showHorizontalGridlines": false,
      "horizontalGridlinesColor": "rgba(255,255,255,.1)",
      "showVerticalGridlines": false,
      "verticalGridlinesColor": "rgba(255,255,255,.1)",
      "showWatermark": true,
      "watermarkColor": "rgba(255,255,255,.1)",
      "showBorder": true,
      "borderColor": null,
      "textColor": null,
      "showLeftScale": false,
      "showRightScale": true,
      "showTimeScale": false,
      "hiddenMarkets": {},
      "barSpacing": 3.6819985779002953,
      "_id": "chart copy 1"
    },
    "chart copy 2": {
      "indicatorsErrors": {},
      "indicators": {
        "ob-speed": {
          "script": "plothistogram(zupdates)\r\nline(ema(zupdates, 21))",
          "name": "OB speed",
          "priceScaleId": "ob-speed",
          "id": "ob-speed",
          "options": {
            "priceScaleId": "ob-speed",
            "scaleMargins": {
              "top": 0.94,
              "bottom": 0
            },
            "visible": false,
            "togglePerp": true,
            "toggleSpot": true,
            "priceFormat": {
              "type": "volume",
              "precision": 2,
              "minMove": 0.01,
              "auto": true
            }
          },
          "series": [
            "ob-speed",
            "atetziah"
          ],
          "displayName": "OB speed",
          "unsavedChanges": false,
          "preview": {},
          "createdAt": 1701126916031,
          "updatedAt": 1702416144379,
          "optionsDefinitions": {}
        },
        "bids-asks-b": {
          "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSD.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSD.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\n// cloudarea(lowerValue: number, higherValue: number)\r\n// - `higherValue` (`number`) - the value of the item which is expected to be higher (default: green line)\r\n// - `lowerValue` (`number`) - the value of the item which is expected to be lower (default: red line)\r\nplotcloudarea(_asks, _bids, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
          "id": "bids-asks-b",
          "name": "Bids Asks B",
          "options": {
            "priceScaleId": "bids-asks",
            "scaleMargins": {
              "top": 0.22,
              "bottom": 0.63
            },
            "togglePerp": false,
            "toggleSpot": false,
            "toggleBinance": true,
            "toggleC": null,
            "toggleRatio0": null,
            "toggleRatio1": null,
            "toggleRatio2": null,
            "toggleRatio3": null,
            "toggleCoinbase": false,
            "toggleBitmex": false,
            "toggleBand1": true,
            "toggleBand2": false,
            "toggleBand3": false,
            "toggleBand4": false,
            "lastValueVisible": true,
            "priceFormat": {
              "type": "volume",
              "precision": 2,
              "minMove": 0.01,
              "auto": true
            },
            "visible": true
          },
          "description": null,
          "createdAt": 1703182792738,
          "updatedAt": 1703182792738,
          "unsavedChanges": false,
          "optionsDefinitions": {},
          "displayName": "Bids Asks B",
          "series": [
            "bids-asks-b"
          ]
        },
        "bids-asks-b1": {
          "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSD.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSD.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\n// cloudarea(lowerValue: number, higherValue: number)\r\n// - `higherValue` (`number`) - the value of the item which is expected to be higher (default: green line)\r\n// - `lowerValue` (`number`) - the value of the item which is expected to be lower (default: red line)\r\nplotcloudarea(_asks, _bids, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
          "id": "bids-asks-b1",
          "name": "Bids Asks B1",
          "options": {
            "priceScaleId": "bids-asks-p1",
            "scaleMargins": {
              "top": 0.37,
              "bottom": 0.48
            },
            "togglePerp": false,
            "toggleSpot": false,
            "toggleBinance": true,
            "toggleC": null,
            "toggleRatio0": null,
            "toggleRatio1": null,
            "toggleRatio2": null,
            "toggleRatio3": null,
            "toggleCoinbase": false,
            "toggleBitmex": false,
            "toggleBand1": false,
            "toggleBand2": true,
            "toggleBand3": false,
            "toggleBand4": false,
            "lastValueVisible": true,
            "priceFormat": {
              "type": "volume",
              "precision": 2,
              "minMove": 0.01,
              "auto": true
            },
            "visible": true
          },
          "description": null,
          "unsavedChanges": false,
          "optionsDefinitions": {},
          "displayName": "Bids Asks B1",
          "series": [
            "bids-asks-b1"
          ]
        },
        "bids-asks-b2": {
          "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSD.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSD.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\n// cloudarea(lowerValue: number, higherValue: number)\r\n// - `higherValue` (`number`) - the value of the item which is expected to be higher (default: green line)\r\n// - `lowerValue` (`number`) - the value of the item which is expected to be lower (default: red line)\r\nplotcloudarea(_asks, _bids, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
          "id": "bids-asks-b2",
          "name": "Bids Asks B2",
          "options": {
            "priceScaleId": "bids-asks-p2",
            "scaleMargins": {
              "top": 0.52,
              "bottom": 0.33
            },
            "togglePerp": false,
            "toggleSpot": false,
            "toggleBinance": true,
            "toggleC": null,
            "toggleRatio0": null,
            "toggleRatio1": null,
            "toggleRatio2": null,
            "toggleRatio3": null,
            "toggleCoinbase": false,
            "toggleBitmex": false,
            "toggleBand1": false,
            "toggleBand2": false,
            "toggleBand3": true,
            "toggleBand4": false,
            "lastValueVisible": true,
            "priceFormat": {
              "type": "volume",
              "precision": 2,
              "minMove": 0.01,
              "auto": true
            },
            "visible": true
          },
          "description": null,
          "unsavedChanges": false,
          "optionsDefinitions": {},
          "displayName": "Bids Asks B2",
          "series": [
            "bids-asks-b2"
          ]
        },
        "bids-asks-b3": {
          "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSD.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSD.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\n// cloudarea(lowerValue: number, higherValue: number)\r\n// - `higherValue` (`number`) - the value of the item which is expected to be higher (default: green line)\r\n// - `lowerValue` (`number`) - the value of the item which is expected to be lower (default: red line)\r\nplotcloudarea(_asks, _bids, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
          "id": "bids-asks-b3",
          "name": "Bids Asks B3",
          "options": {
            "priceScaleId": "bids-asks-p3",
            "scaleMargins": {
              "top": 0.67,
              "bottom": 0.18
            },
            "togglePerp": false,
            "toggleSpot": false,
            "toggleBinance": true,
            "toggleC": null,
            "toggleRatio0": null,
            "toggleRatio1": null,
            "toggleRatio2": null,
            "toggleRatio3": null,
            "toggleCoinbase": false,
            "toggleBitmex": false,
            "toggleBand1": false,
            "toggleBand2": false,
            "toggleBand3": false,
            "toggleBand4": true,
            "lastValueVisible": true,
            "priceFormat": {
              "type": "volume",
              "precision": 2,
              "minMove": 0.01,
              "auto": true
            },
            "visible": true
          },
          "description": null,
          "unsavedChanges": false,
          "optionsDefinitions": {},
          "displayName": "Bids Asks B3",
          "series": [
            "bids-asks-b3"
          ]
        },
        "price-binance": {
          "script": "src = { sources: { \"BINANCE:btcusdt\":BINANCE:btcusdt }, localTimestamp: time }\r\n\r\nvar ohlc = options.useHeikinAshi ? avg_heikinashi(src) : options.useGaps ? avg_ohlc_with_gaps(src) : avg_ohlc(src)\r\n\r\nplotcandlestick(ohlc, id=price)",
          "name": "Price Binance",
          "priceScaleId": "right",
          "id": "price-binance",
          "options": {
            "priceScaleId": "right",
            "useGaps": null,
            "useHeikinAshi": null,
            "visible": true
          },
          "series": [
            "price"
          ],
          "displayName": "Price Binance",
          "unsavedChanges": false,
          "preview": {},
          "optionsDefinitions": {}
        },
        "bids-asks-b4": {
          "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSD.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSD.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\n// cloudarea(lowerValue: number, higherValue: number)\r\n// - `higherValue` (`number`) - the value of the item which is expected to be higher (default: green line)\r\n// - `lowerValue` (`number`) - the value of the item which is expected to be lower (default: red line)\r\nplotcloudarea(_asks, _bids, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
          "id": "bids-asks-b4",
          "name": "Bids Asks B4",
          "options": {
            "priceScaleId": "bids-asks-b4",
            "scaleMargins": {
              "top": 0.82,
              "bottom": 0.03
            },
            "togglePerp": false,
            "toggleSpot": false,
            "toggleBinance": true,
            "toggleC": null,
            "toggleRatio0": null,
            "toggleRatio1": null,
            "toggleRatio2": null,
            "toggleRatio3": null,
            "toggleCoinbase": false,
            "toggleBitmex": false,
            "toggleBand1": true,
            "toggleBand2": true,
            "toggleBand3": true,
            "toggleBand4": true,
            "lastValueVisible": true,
            "priceFormat": {
              "type": "volume",
              "precision": 2,
              "minMove": 0.01,
              "auto": true
            },
            "visible": true
          },
          "description": null,
          "unsavedChanges": false,
          "optionsDefinitions": {},
          "displayName": "Bids Asks B4",
          "series": [
            "bids-asks-b4"
          ],
          "libraryId": "bids-asks-b4",
          "createdAt": 1738706702548,
          "updatedAt": 1738706702548
        }
      },
      "indicatorOrder": [
        "ob-speed",
        "bids-asks-b",
        "bids-asks-b1",
        "bids-asks-b2",
        "bids-asks-b3",
        "price-binance",
        "bids-asks-b4"
      ],
      "priceScales": {
        "right": {
          "scaleMargins": {
            "top": 0.02,
            "bottom": 0.78
          },
          "priceFormat": {
            "precision": 2,
            "minMove": 0.01
          },
          "indicators": [
            "Price Perp"
          ]
        },
        "cvd": {
          "scaleMargins": {
            "top": 0.01,
            "bottom": 0
          }
        },
        "volume_liquidations": {
          "scaleMargins": {
            "top": 0,
            "bottom": 0.96
          }
        },
        "volume": {
          "scaleMargins": {
            "top": 0.87,
            "bottom": 0
          }
        },
        "bids-asks": {
          "scaleMargins": {
            "top": 0.22,
            "bottom": 0.63
          },
          "indicators": [
            "Bids Asks B"
          ]
        },
        "bids-asks-p1": {
          "scaleMargins": {
            "top": 0.37,
            "bottom": 0.48
          },
          "indicators": [
            "Bids Asks B1"
          ]
        },
        "bids-asks-p2": {
          "scaleMargins": {
            "top": 0.52,
            "bottom": 0.33
          },
          "indicators": [
            "Bids Asks B2"
          ]
        },
        "bids-asks-p3": {
          "scaleMargins": {
            "top": 0.67,
            "bottom": 0.18
          },
          "indicators": [
            "Bids Asks B3"
          ]
        },
        "ob-speed": {
          "scaleMargins": {
            "top": 0.94,
            "bottom": 0
          },
          "indicators": [
            "OB speed"
          ]
        },
        "bids-asks-b4": {
          "scaleMargins": {
            "top": 0.82,
            "bottom": 0.03
          },
          "indicators": [
            "Bids Asks B4"
          ]
        }
      },
      "layouting": false,
      "showIndicators": true,
      "timeframe": "60",
      "refreshRate": 1000,
      "showAlerts": true,
      "showAlertsLabel": true,
      "showLegend": false,
      "fillGapsWithEmpty": true,
      "showHorizontalGridlines": false,
      "horizontalGridlinesColor": "rgba(255,255,255,.1)",
      "showVerticalGridlines": false,
      "verticalGridlinesColor": "rgba(255,255,255,.1)",
      "showWatermark": true,
      "watermarkColor": "rgba(255,255,255,.1)",
      "showBorder": true,
      "borderColor": null,
      "textColor": null,
      "showLeftScale": false,
      "showRightScale": true,
      "showTimeScale": false,
      "hiddenMarkets": {},
      "barSpacing": 1.6396485454825174,
      "_id": "chart copy 2"
    },
    "chart copy 3": {
      "indicatorsErrors": {},
      "indicators": {
        "ob-speed": {
          "script": "plothistogram(zupdates)\r\nline(ema(zupdates, 21))",
          "name": "OB speed",
          "priceScaleId": "ob-speed",
          "id": "ob-speed",
          "options": {
            "priceScaleId": "ob-speed",
            "scaleMargins": {
              "top": 0.94,
              "bottom": 0
            },
            "visible": false,
            "togglePerp": true,
            "toggleSpot": true,
            "priceFormat": {
              "type": "volume",
              "precision": 2,
              "minMove": 0.01,
              "auto": true
            }
          },
          "series": [
            "ob-speed",
            "g8m2hdc9"
          ],
          "displayName": "OB speed",
          "unsavedChanges": false,
          "preview": {},
          "createdAt": 1701126916031,
          "updatedAt": 1702416144379,
          "optionsDefinitions": {}
        },
        "price-coinbase": {
          "script": "src = { sources: { \"COINBASE:BTC-USD\":COINBASE:BTC-USD }, localTimestamp: time }\r\n\r\nvar ohlc = options.useHeikinAshi ? avg_heikinashi(src) : options.useGaps ? avg_ohlc_with_gaps(src) : avg_ohlc(src)\r\n\r\nplotcandlestick(ohlc, id=price)",
          "name": "Price Coinbase",
          "priceScaleId": "right",
          "id": "price-coinbase",
          "options": {
            "priceScaleId": "right",
            "useGaps": null,
            "useHeikinAshi": null,
            "visible": true
          },
          "series": [
            "price"
          ],
          "displayName": "Price Coinbase",
          "unsavedChanges": false,
          "preview": {},
          "createdAt": 1701644059121,
          "updatedAt": 1701644307369,
          "optionsDefinitions": {}
        },
        "bids-asks-c": {
          "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSD.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSD.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\n// cloudarea(lowerValue: number, higherValue: number)\r\n// - `higherValue` (`number`) - the value of the item which is expected to be higher (default: green line)\r\n// - `lowerValue` (`number`) - the value of the item which is expected to be lower (default: red line)\r\nplotcloudarea(_asks, _bids, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
          "id": "bids-asks-c",
          "name": "Bids Asks c",
          "options": {
            "priceScaleId": "bids-asks",
            "scaleMargins": {
              "top": 0.23,
              "bottom": 0.62
            },
            "togglePerp": false,
            "toggleSpot": false,
            "toggleBinance": false,
            "toggleC": null,
            "toggleRatio0": null,
            "toggleRatio1": null,
            "toggleRatio2": null,
            "toggleRatio3": null,
            "toggleCoinbase": true,
            "toggleBitmex": false,
            "toggleBand1": true,
            "toggleBand2": false,
            "toggleBand3": false,
            "toggleBand4": false,
            "lastValueVisible": true,
            "priceFormat": {
              "type": "volume",
              "precision": 2,
              "minMove": 0.01,
              "auto": true
            },
            "visible": true
          },
          "description": null,
          "createdAt": 1703182792738,
          "updatedAt": 1703182792738,
          "unsavedChanges": false,
          "optionsDefinitions": {},
          "displayName": "Bids Asks c",
          "series": [
            "bids-asks-c"
          ]
        },
        "bids-asks-c1": {
          "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSD.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSD.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\n// cloudarea(lowerValue: number, higherValue: number)\r\n// - `higherValue` (`number`) - the value of the item which is expected to be higher (default: green line)\r\n// - `lowerValue` (`number`) - the value of the item which is expected to be lower (default: red line)\r\nplotcloudarea(_asks, _bids, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
          "id": "bids-asks-c1",
          "name": "Bids Asks c1",
          "options": {
            "priceScaleId": "bids-asks-p1",
            "scaleMargins": {
              "top": 0.38,
              "bottom": 0.47
            },
            "togglePerp": false,
            "toggleSpot": false,
            "toggleBinance": false,
            "toggleC": null,
            "toggleRatio0": null,
            "toggleRatio1": null,
            "toggleRatio2": null,
            "toggleRatio3": null,
            "toggleCoinbase": true,
            "toggleBitmex": false,
            "toggleBand1": false,
            "toggleBand2": true,
            "toggleBand3": false,
            "toggleBand4": false,
            "lastValueVisible": true,
            "priceFormat": {
              "type": "volume",
              "precision": 2,
              "minMove": 0.01,
              "auto": true
            },
            "visible": true
          },
          "description": null,
          "unsavedChanges": false,
          "optionsDefinitions": {},
          "displayName": "Bids Asks c1",
          "series": [
            "bids-asks-c1"
          ]
        },
        "bids-asks-c2": {
          "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSD.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSD.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\n// cloudarea(lowerValue: number, higherValue: number)\r\n// - `higherValue` (`number`) - the value of the item which is expected to be higher (default: green line)\r\n// - `lowerValue` (`number`) - the value of the item which is expected to be lower (default: red line)\r\nplotcloudarea(_asks, _bids, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
          "id": "bids-asks-c2",
          "name": "Bids Asks c2",
          "options": {
            "priceScaleId": "bids-asks-p2",
            "scaleMargins": {
              "top": 0.53,
              "bottom": 0.32
            },
            "togglePerp": false,
            "toggleSpot": false,
            "toggleBinance": false,
            "toggleC": null,
            "toggleRatio0": null,
            "toggleRatio1": null,
            "toggleRatio2": null,
            "toggleRatio3": null,
            "toggleCoinbase": true,
            "toggleBitmex": false,
            "toggleBand1": false,
            "toggleBand2": false,
            "toggleBand3": true,
            "toggleBand4": false,
            "lastValueVisible": true,
            "priceFormat": {
              "type": "volume",
              "precision": 2,
              "minMove": 0.01,
              "auto": true
            },
            "visible": true
          },
          "description": null,
          "unsavedChanges": true,
          "optionsDefinitions": {},
          "displayName": "Bids Asks c2",
          "series": [
            "bids-asks-c2"
          ]
        },
        "bids-asks-c3": {
          "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSD.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSD.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\n// cloudarea(lowerValue: number, higherValue: number)\r\n// - `higherValue` (`number`) - the value of the item which is expected to be higher (default: green line)\r\n// - `lowerValue` (`number`) - the value of the item which is expected to be lower (default: red line)\r\nplotcloudarea(_asks, _bids, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
          "id": "bids-asks-c3",
          "name": "Bids Asks c3",
          "options": {
            "priceScaleId": "bids-asks-p3",
            "scaleMargins": {
              "top": 0.68,
              "bottom": 0.17
            },
            "togglePerp": false,
            "toggleSpot": true,
            "toggleBinance": false,
            "toggleC": null,
            "toggleRatio0": null,
            "toggleRatio1": null,
            "toggleRatio2": null,
            "toggleRatio3": null,
            "toggleCoinbase": true,
            "toggleBitmex": false,
            "toggleBand1": false,
            "toggleBand2": false,
            "toggleBand3": false,
            "toggleBand4": true,
            "lastValueVisible": true,
            "priceFormat": {
              "type": "volume",
              "precision": 2,
              "minMove": 0.01,
              "auto": true
            },
            "visible": true
          },
          "description": null,
          "unsavedChanges": false,
          "optionsDefinitions": {},
          "displayName": "Bids Asks c3",
          "series": [
            "bids-asks-c3"
          ]
        },
        "bids-asks-c4": {
          "script": "if (!pendingMarkers) {\r\n    // runs only once\r\n    pendingMarkers = []\r\n\r\n    showType = {\r\n      spot: options.toggleSpot,\r\n      perp: options.togglePerp,\r\n      binance: options.toggleBinance,\r\n      coinbase: options.toggleCoinbase,\r\n      bitmex: options.toggleBitmex\r\n    }\r\n\r\n    toAdd = [\r\n        options.toggleBand1 || false,\r\n        options.toggleBand2 || false,\r\n        options.toggleBand3 || false,\r\n        options.toggleBand4 || false,\r\n    ]\r\n}\r\n// </STARTUP SCRIPT> \r\nvar bidsPerp = ORDERBOOK:AGGRPERP-BTCUSD.zbids\r\nvar asksPerp = ORDERBOOK:AGGRPERP-BTCUSD.zasks\r\nvar bidsSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zbids \r\nvar asksSpot = ORDERBOOK:AGGRSPOT-BTCUSD.zasks \r\nvar bidsBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zbids\r\nvar asksBinance = renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'] && renderer.sources['ORDERBOOK:BINANCE-BTCUSDT'].zasks\r\nvar bidsCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zbids\r\nvar asksCoinbase = renderer.sources['ORDERBOOK:COINBASE-BTCUSD'] && renderer.sources['ORDERBOOK:COINBASE-BTCUSD'].zasks\r\nvar bidsBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zbids\r\nvar asksBitmex = renderer.sources['ORDERBOOK:BITMEX-XBTUSD'] && renderer.sources['ORDERBOOK:BITMEX-XBTUSD'].zasks\r\n\r\nvar m = [\r\n    { which: 'perp', bids: bidsPerp || [], asks: asksPerp || [] },\r\n    { which: 'spot', bids: bidsSpot || [], asks: asksSpot || [] },\r\n    { which: 'binance', bids: bidsBinance || [], asks: asksBinance || [] },\r\n    { which: 'coinbase', bids: bidsCoinbase || [], asks: asksCoinbase || [] },\r\n    { which: 'bitmex', bids: bidsBitmex || [], asks: asksBitmex || [] }\r\n];\r\n\r\nvar _bids = 0\r\nvar _asks = 0\r\n\r\nfor(let typeIndex = 0; typeIndex < m.length; typeIndex++){\r\n\r\n    var c = m[typeIndex]\r\n\r\n    if( showType[c.which]  === false ){\r\n      continue\r\n    }\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        if( toAdd[i] === true ){\r\n            _bids += c.bids[i] || 0\r\n            _asks += c.asks[i] || 0\r\n        }\r\n    }\r\n}\r\n// cloudarea(lowerValue: number, higherValue: number)\r\n// - `higherValue` (`number`) - the value of the item which is expected to be higher (default: green line)\r\n// - `lowerValue` (`number`) - the value of the item which is expected to be lower (default: red line)\r\nplotcloudarea(_asks, _bids, positiveColor=options.positiveColor,  negativeColor=options.negativeColor,  higherLineColor=options.positiveLineColor, lowerLineColor=options.negativeLineColor)",
          "id": "bids-asks-c4",
          "name": "Bids Asks c4",
          "options": {
            "priceScaleId": "bids-asks-c4",
            "scaleMargins": {
              "top": 0.83,
              "bottom": 0.02
            },
            "togglePerp": false,
            "toggleSpot": false,
            "toggleBinance": false,
            "toggleC": null,
            "toggleRatio0": null,
            "toggleRatio1": null,
            "toggleRatio2": null,
            "toggleRatio3": null,
            "toggleCoinbase": true,
            "toggleBitmex": false,
            "toggleBand1": true,
            "toggleBand2": true,
            "toggleBand3": true,
            "toggleBand4": true,
            "lastValueVisible": true,
            "priceFormat": {
              "type": "volume",
              "precision": 2,
              "minMove": 0.01,
              "auto": true
            },
            "visible": true
          },
          "description": null,
          "unsavedChanges": false,
          "optionsDefinitions": {},
          "displayName": "Bids Asks c4",
          "series": [
            "bids-asks-c4"
          ],
          "libraryId": "bids-asks-c4",
          "createdAt": 1738706708042,
          "updatedAt": 1738706708042
        }
      },
      "indicatorOrder": [
        "ob-speed",
        "price-coinbase",
        "bids-asks-c",
        "bids-asks-c1",
        "bids-asks-c2",
        "bids-asks-c3",
        "bids-asks-c4"
      ],
      "priceScales": {
        "right": {
          "scaleMargins": {
            "top": 0.02,
            "bottom": 0.78
          },
          "priceFormat": {
            "precision": 2,
            "minMove": 0.01
          },
          "indicators": [
            "Price Perp"
          ]
        },
        "cvd": {
          "scaleMargins": {
            "top": 0.01,
            "bottom": 0
          }
        },
        "volume_liquidations": {
          "scaleMargins": {
            "top": 0,
            "bottom": 0.96
          }
        },
        "volume": {
          "scaleMargins": {
            "top": 0.87,
            "bottom": 0
          }
        },
        "bids-asks": {
          "scaleMargins": {
            "top": 0.23,
            "bottom": 0.62
          },
          "indicators": [
            "Bids Asks c"
          ]
        },
        "bids-asks-p1": {
          "scaleMargins": {
            "top": 0.38,
            "bottom": 0.47
          },
          "indicators": [
            "Bids Asks c1"
          ]
        },
        "bids-asks-p2": {
          "scaleMargins": {
            "top": 0.53,
            "bottom": 0.32
          },
          "indicators": [
            "Bids Asks c2"
          ]
        },
        "bids-asks-p3": {
          "scaleMargins": {
            "top": 0.68,
            "bottom": 0.17
          },
          "indicators": [
            "Bids Asks c3"
          ]
        },
        "ob-speed": {
          "scaleMargins": {
            "top": 0.94,
            "bottom": 0
          },
          "indicators": [
            "OB speed"
          ]
        },
        "bids-asks-c4": {
          "scaleMargins": {
            "top": 0.83,
            "bottom": 0.02
          },
          "indicators": [
            "Bids Asks c4"
          ]
        }
      },
      "layouting": false,
      "showIndicators": true,
      "timeframe": "60",
      "refreshRate": 1000,
      "showAlerts": true,
      "showAlertsLabel": true,
      "showLegend": false,
      "fillGapsWithEmpty": true,
      "showHorizontalGridlines": false,
      "horizontalGridlinesColor": "rgba(255,255,255,.1)",
      "showVerticalGridlines": false,
      "verticalGridlinesColor": "rgba(255,255,255,.1)",
      "showWatermark": true,
      "watermarkColor": "rgba(255,255,255,.1)",
      "showBorder": true,
      "borderColor": null,
      "textColor": null,
      "showLeftScale": false,
      "showRightScale": true,
      "showTimeScale": true,
      "hiddenMarkets": {},
      "barSpacing": 3.7067058401773436,
      "_id": "chart copy 3"
    }
  }
}